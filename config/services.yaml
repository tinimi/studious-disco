parameters:
    default.sort: true
    default.logFile: logs/log
    default.logLevelFile: 'info'
    default.logLevelEcho: 'error'
    default.apiPaid: false
    default.apiBase: 'EUR'
    default.commissionDeposit: '0.03'
    default.commissionWithdrawBusiness: '0.5'
    default.commissionWithdrawPrivate: '0.3'
    default.commissionWithdrawPrivateCurrency: 'EUR'
    default.commissionWithdrawPrivateAmount: '1000'
    default.commissionWithdrawPrivateCount: 3
    default.rate.EUR.USD: '1.1497'
    default.rate.EUR.JPY: '129.53'
    default.scale.USD: '2'
    default.scale.EUR: '2'
    default.scale.JPY: '0'
    default.rate.module: 'api'
    rates:
        EUR:
            USD: '%env(default:default.rate.EUR.USD:APP_RATE_EUR_USD)%'
            JPY: '%env(default:default.rate.EUR.JPY:APP_RATE_EUR_JPY)%'
    currencies:
        -
            name: USD
            scale: '%env(int:default:default.scale.USD:APP_SCALE_USD)%'
        -
            name: EUR
            scale: '%env(int:default:default.scale.EUR:APP_SCALE_EUR)%'
        -
            name: JPY
            scale: '%env(int:default:default.scale.JPY:APP_SCALE_JPY)%'
# config/services.yaml
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Exceptions,DTO}'
    
    App\Runner:
        public: true
        arguments:
            $sort: '%env(bool:default:default.sort:APP_SORT)%'

    App\Repository\CurrencyRepository:
        arguments: ['%currencies%']
   
    commission.deposit:
        class: 'App\Service\Commission\Constant'
        arguments:
            $commission: '%env(default:default.commissionDeposit:APP_COMMISSION_DEPOSIT)%'
    
    commission.withdraw.business:
        class: 'App\Service\Commission\Constant'
        arguments:
            $commission: '%env(default:default.commissionWithdrawBusiness:APP_COMMISSION_WITHDRAW_BUSSINESS)%'
    
    commission.withdraw.private:
        class: 'App\Service\Commission\Discount'
        arguments:
            $commission: '%env(default:default.commissionWithdrawPrivate:APP_COMMISSION_WITHDRAW_PRIVATE)%'
            $discountAmount: '%env(default:default.commissionWithdrawPrivateAmount:APP_COMMISSION_WITHDRAW_PRIVATE_AMOUNT)%'
            $discountCurrency: '%env(default:default.commissionWithdrawPrivateCurrency:APP_COMMISSION_WITHDRAW_PRIVATE_CURRENCY)%'
            $discountCount: '%env(default:default.commissionWithdrawPrivateCount:APP_COMMISSION_WITHDRAW_PRIVATE_COUNT)%'

    App\Service\Commission\Calc:
        arguments:
            $commissions:
                deposit:
                    business: '@commission.deposit'
                    private: '@commission.deposit'
                withdraw:
                    business: '@commission.withdraw.business'
                    private: '@commission.withdraw.private'

    BenMajor\ExchangeRatesAPI\ExchangeRatesAPI:
        arguments:
            $access_key: '%env(APP_API_KEY)%'
            $use_ssl: '%env(bool:default:default.apiPaid:APP_API_PAID)%'

    App\Service\ExchangeRate\Stub:
        arguments: 
            $rates: '%rates%'

    App\Service\ExchangeRate\Api:
        arguments:
            $isPaid: '%env(bool:default:default.apiPaid:APP_API_PAID)%'
            $baseCurrency: '%env(default:default.apiBase:APP_API_BASE)%'

    App\Service\ExchangeRate\ExchangeRateInterface:
        alias: App\Service\ExchangeRate\CacheMemory

    App\Service\ExchangeRate\Selector:
        arguments:
            $selectedRateName: '%env(default:default.rate.module:APP_RATE_MODULE)%'
            $rates:
                stub: '@App\Service\ExchangeRate\Stub'
                api: '@App\Service\ExchangeRate\Api'

    App\Service\ExchangeRate\CacheMemory:
        arguments:
            $rate: '@App\Service\ExchangeRate\Selector'

    Psr\Log\LoggerInterface:
        class: Monolog\Logger
        arguments: ['app', ['@monolog.file', '@monolog.echo']]
        public: true
    monolog.file:
        class: Monolog\Handler\StreamHandler
        arguments: ['%env(default:default.logFile:APP_LOG_FILENAME)%', '%env(default:default.logLevelFile:APP_LOG_LEVEL_FILE)%']
    monolog.echo:
        class: Monolog\Handler\StreamHandler
        arguments: ['php://stderr', '%env(default:default.logLevelEcho:APP_LOG_LEVEL_ECHO)%']
