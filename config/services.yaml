imports:                                                                                                                                                                                                           
    - { resource: currencies.yaml }
    - { resource: env.yaml }
parameters:
    default.sort: true
    default.logFile: logs/log
    default.logLevelFile: 'info'
    default.logLevelEcho: 'error'
    default.apiPaid: false
    default.apiBase: 'EUR'
    rates:
        EUR:
            USD: '1.1497'
            JPY: '129.53'
# config/services.yaml
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Exceptions,DTO}'
    
    App\Runner:
        public: true
        arguments:
            $sort: '%env(bool:default:default.sort:APP_SORT)%'

    App\Factory\CurrencyFactory:
        arguments: ['%currencies%']
   
    App\Service\ExchangeRate\Stub:
        arguments: 
            $rates: '%rates%'

    commission.deposit:
        class: 'App\Service\Commission\Constant'
        arguments:
            $commission: '0.03'
    
    commission.withdraw.business:
        class: 'App\Service\Commission\Constant'
        arguments:
            $commission: '0.5'
    
    commission.withdraw.private:
        class: 'App\Service\Commission\Discount'
        arguments:
            $commission: '0.3'
            $discountAmount: '1000'
            $discountCurrency: 'EUR'
            $discountCount: 3

    App\Service\Commission\Calc:
        arguments:
            $commissions:
                deposit:
                    business: '@commission.deposit'
                    private: '@commission.deposit'
                withdraw:
                    business: '@commission.withdraw.business'
                    private: '@commission.withdraw.private'

    BenMajor\ExchangeRatesAPI\ExchangeRatesAPI:
        arguments:
            $access_key: '%env(APP_API_KEY)%'
            $use_ssl: '%env(bool:default:default.apiPaid:APP_API_PAID)%'

    App\Service\ExchangeRate\Api:
        arguments:
            $isPaid: '%env(bool:default:default.apiPaid:APP_API_PAID)%'
            $baseCurrency: '%env(default:default.apiBase:APP_API_BASE)%'

    App\Service\ExchangeRate\ExchangeRateInterface:
        alias: App\Service\ExchangeRate\CacheMemory

    rate:
        alias: App\Service\ExchangeRate\Stub
        #alias: App\Service\ExchangeRate\Api
    
    App\Service\ExchangeRate\CacheMemory:
        arguments:
            $rate: '@rate'

    Psr\Log\LoggerInterface:
        class: Monolog\Logger
        arguments: ['app', ['@monolog.file', '@monolog.echo']]
        public: true
    monolog.file:
        class: Monolog\Handler\StreamHandler
        arguments: ['%env(default:default.logFile:APP_LOG_FILENAME)%', '%env(default:default.logLevelFile:APP_LOG_LEVEL_FILE)%']
    monolog.echo:
        class: Monolog\Handler\StreamHandler
        arguments: ['php://stderr', '%env(default:default.logLevelEcho:APP_LOG_LEVEL_ECHO)%']
